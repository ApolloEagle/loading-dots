{"version":3,"sources":["../../../src/commands/bundle/assetCatalogIOS.ts"],"names":["cleanAssetCatalog","catalogDir","files","fs","readdirSync","filter","file","endsWith","removeSync","path","join","getImageSet","asset","scales","fileName","assetPathUtils","getResourceIdentifier","basePath","map","scale","idx","suffix","name","type","src","isCatalogAsset","writeImageSet","imageSet","mkdirsSync","dest","copyFileSync","writeJSONSync","images","filename","idiom","info","author","version"],"mappings":";;;;;;;;;;AAQA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;;;;AAVA;AACA;AACA;AACA;AACA;AACA;AACA;AAOO,SAASA,iBAAT,CAA2BC,UAA3B,EAAqD;AAC1D,QAAMC,KAAK,GAAGC,mBACXC,WADW,CACCH,UADD,EAEXI,MAFW,CAEHC,IAAD,IAAUA,IAAI,CAACC,QAAL,CAAc,WAAd,CAFN,CAAd;;AAGA,OAAK,MAAMD,IAAX,IAAmBJ,KAAnB,EAA0B;AACxBC,uBAAGK,UAAH,CAAcC,gBAAKC,IAAL,CAAUT,UAAV,EAAsBK,IAAtB,CAAd;AACD;AACF;;AAOM,SAASK,WAAT,CACLV,UADK,EAELW,KAFK,EAGLC,MAHK,EAIK;AACV,QAAMC,QAAQ,GAAGC,wBAAeC,qBAAf,CAAqCJ,KAArC,CAAjB;;AACA,SAAO;AACLK,IAAAA,QAAQ,EAAER,gBAAKC,IAAL,CAAUT,UAAV,EAAuB,GAAEa,QAAS,WAAlC,CADL;AAELZ,IAAAA,KAAK,EAAEW,MAAM,CAACK,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAChC,YAAMC,MAAM,GAAGF,KAAK,KAAK,CAAV,GAAc,EAAd,GAAoB,IAAGA,KAAM,GAA5C;AACA,aAAO;AACLG,QAAAA,IAAI,EAAG,GAAER,QAAQ,GAAGO,MAAO,IAAGT,KAAK,CAACW,IAAK,EADpC;AAELJ,QAAAA,KAFK;AAGLK,QAAAA,GAAG,EAAEZ,KAAK,CAACV,KAAN,CAAYkB,GAAZ;AAHA,OAAP;AAKD,KAPM;AAFF,GAAP;AAWD;;AAEM,SAASK,cAAT,CAAwBb,KAAxB,EAAmD;AACxD,SAAOA,KAAK,CAACW,IAAN,KAAe,KAAf,IAAwBX,KAAK,CAACW,IAAN,KAAe,KAAvC,IAAgDX,KAAK,CAACW,IAAN,KAAe,MAAtE;AACD;;AAEM,SAASG,aAAT,CAAuBC,QAAvB,EAAiD;AACtDxB,qBAAGyB,UAAH,CAAcD,QAAQ,CAACV,QAAvB;;AAEA,OAAK,MAAMX,IAAX,IAAmBqB,QAAQ,CAACzB,KAA5B,EAAmC;AACjC,UAAM2B,IAAI,GAAGpB,gBAAKC,IAAL,CAAUiB,QAAQ,CAACV,QAAnB,EAA6BX,IAAI,CAACgB,IAAlC,CAAb;;AACAnB,uBAAG2B,YAAH,CAAgBxB,IAAI,CAACkB,GAArB,EAA0BK,IAA1B;AACD;;AAED1B,qBAAG4B,aAAH,CAAiBtB,gBAAKC,IAAL,CAAUiB,QAAQ,CAACV,QAAnB,EAA6B,eAA7B,CAAjB,EAAgE;AAC9De,IAAAA,MAAM,EAAEL,QAAQ,CAACzB,KAAT,CAAegB,GAAf,CAAoBZ,IAAD,KAAW;AACpC2B,MAAAA,QAAQ,EAAE3B,IAAI,CAACgB,IADqB;AAEpCY,MAAAA,KAAK,EAAE,WAF6B;AAGpCf,MAAAA,KAAK,EAAG,GAAEb,IAAI,CAACa,KAAM;AAHe,KAAX,CAAnB,CADsD;AAM9DgB,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,OADJ;AAEJC,MAAAA,OAAO,EAAE;AAFL;AANwD,GAAhE;AAWD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport path from 'path';\nimport fs from 'fs-extra';\nimport assetPathUtils from './assetPathUtils';\nimport {AssetData} from './buildBundle';\n\nexport function cleanAssetCatalog(catalogDir: string): void {\n  const files = fs\n    .readdirSync(catalogDir)\n    .filter((file) => file.endsWith('.imageset'));\n  for (const file of files) {\n    fs.removeSync(path.join(catalogDir, file));\n  }\n}\n\ntype ImageSet = {\n  basePath: string;\n  files: {name: string; src: string; scale: number}[];\n};\n\nexport function getImageSet(\n  catalogDir: string,\n  asset: AssetData,\n  scales: readonly number[],\n): ImageSet {\n  const fileName = assetPathUtils.getResourceIdentifier(asset);\n  return {\n    basePath: path.join(catalogDir, `${fileName}.imageset`),\n    files: scales.map((scale, idx) => {\n      const suffix = scale === 1 ? '' : `@${scale}x`;\n      return {\n        name: `${fileName + suffix}.${asset.type}`,\n        scale,\n        src: asset.files[idx],\n      };\n    }),\n  };\n}\n\nexport function isCatalogAsset(asset: AssetData): boolean {\n  return asset.type === 'png' || asset.type === 'jpg' || asset.type === 'jpeg';\n}\n\nexport function writeImageSet(imageSet: ImageSet): void {\n  fs.mkdirsSync(imageSet.basePath);\n\n  for (const file of imageSet.files) {\n    const dest = path.join(imageSet.basePath, file.name);\n    fs.copyFileSync(file.src, dest);\n  }\n\n  fs.writeJSONSync(path.join(imageSet.basePath, 'Contents.json'), {\n    images: imageSet.files.map((file) => ({\n      filename: file.name,\n      idiom: 'universal',\n      scale: `${file.scale}x`,\n    })),\n    info: {\n      author: 'xcode',\n      version: 1,\n    },\n  });\n}\n"]}